"use strict";(self.webpackChunkgits_cli=self.webpackChunkgits_cli||[]).push([[6585],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(n),c=r,g=u["".concat(s,".").concat(c)]||u[c]||m[c]||a;return n?i.createElement(g,l(l({ref:t},d),{},{components:n})):i.createElement(g,l({ref:t},d))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<a;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5604:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var i=n(7462),r=(n(7294),n(3905));const a={sidebar_position:1},l="Pre Build Ios",o={unversionedId:"gits_cli/build/prebuild/ios",id:"gits_cli/build/prebuild/ios",title:"Pre Build Ios",description:"This command aims to generate an ios configuration file before the build process is carried out, usually used for CI/CD needs.",source:"@site/docs/gits_cli/build/prebuild/ios.md",sourceDirName:"gits_cli/build/prebuild",slug:"/gits_cli/build/prebuild/ios",permalink:"/gits_cli_documentation/docs/gits_cli/build/prebuild/ios",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"mySidebars",previous:{title:"Prebuild",permalink:"/gits_cli_documentation/docs/category/prebuild"},next:{title:"Changelog",permalink:"/gits_cli_documentation/docs/gits_cli/changelog/"}},s={},p=[{value:"Generate Results",id:"generate-results",level:2},{value:"Options",id:"options",level:2},{value:"Migration",id:"migration",level:2}],d={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"pre-build-ios"},"Pre Build Ios"),(0,r.kt)("p",null,"This command aims to generate an ios configuration file before the build process is carried out, usually used for CI/CD needs."),(0,r.kt)("p",null,"Here is 1 file needed which is in ",(0,r.kt)("inlineCode",{parentName:"p"},"ios/deployment/appstore_deployment.json"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "dev": {\n    "email_identity": "ios@gits.id",\n    "itc_team_id": "96184904",\n    "team_id": "P53KJ6MXZH",\n    "provisioning_profiles": "Gits Flutter Starter Kit"\n  },\n  "stag": {\n    "email_identity": "ios@gits.id",\n    "itc_team_id": "96184904",\n    "team_id": "P53KJ6MXZH",\n    "provisioning_profiles": "Gits Flutter Starter Kit"\n  },\n  "prod": {\n    "email_identity": "ios@gits.id",\n    "itc_team_id": "96184904",\n    "team_id": "P53KJ6MXZH",\n    "provisioning_profiles": "Gits Flutter Starter Kit"\n  }\n}\n')),(0,r.kt)("p",null,"Here are flavors ",(0,r.kt)("inlineCode",{parentName:"p"},"dev"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"stag")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"prod"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"email_identity")," is email used to identity in runner"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"itc_team_id")," is  App Store Connect Team ID"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"team_id")," is Developer Portal Team ID"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"provisioning_profiles")," is Name of Provisioning Profile")),(0,r.kt)("p",null,"If so, do the command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"gits prebuild ios -f [flavor]\n")),(0,r.kt)("h2",{id:"generate-results"},"Generate Results"),(0,r.kt)("p",null,"There are 3 files that will be generated from this ios prebuild:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ios/fastlane/Appfile")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ios/Runner.xcodeproj/project.pbxproj")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ios/ExportOptions.plist"))),(0,r.kt)("h2",{id:"options"},"Options"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Flavor/Environment :  ")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flavor/Environment"),(0,r.kt)("th",{parentName:"tr",align:null},"Alternative"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-f dev")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--flavor dev")),(0,r.kt)("td",{parentName:"tr",align:null},"Pre Build project on dev environment (Default)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-f stag")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--flavor stag")),(0,r.kt)("td",{parentName:"tr",align:null},"Pre Build project on staging environment")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-f prod")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--flavor prod")),(0,r.kt)("td",{parentName:"tr",align:null},"Pre Build project on production environment")))),(0,r.kt)("h2",{id:"migration"},"Migration"),(0,r.kt)("p",null,"To migrate from previous version just add the file ",(0,r.kt)("inlineCode",{parentName:"p"},"ios/deployment/appstore_deployment.json")," which was described earlier then in ",(0,r.kt)("inlineCode",{parentName:"p"},".gitlab-ci.yml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title=".gitlab-ci.yml"',title:'".gitlab-ci.yml"'},'.build-ios:\n  stage: build_ios\n  resource_group: build_and_deploy_ios\n  allow_failure: false\n  script:\n    # Get version name & build number from tag\n    - IFS=\'-\' # Read the split words into an array based on dash delimiter.\n    - read -a strarr <<< "$CI_COMMIT_TAG"\n    - VERSION_NAME=${strarr[1]}\n    - BUILD_NUMBER=${strarr[2]}\n    # Setup key ios\n-   - echo "$APP_STORE_JSON" > "$PATH_APP_STORE_JSON"\n+   - gits_cli prebuild ios -f ${CI_ENVIRONMENT_NAME}\n    # Change working directory to ios\n    - cd ios\n    # Set up code signing settings on Xcode project.\n    - chmod +x deployment/provisioning.sh\n    - ./deployment/provisioning.sh\n    - pod install --repo-update\n    # Change working directory to root\n    - cd ..\n    # Build ipa\n    - gits_cli build ipa -f ${CI_ENVIRONMENT_NAME} --build-number=$BUILD_NUMBER --build-name=$VERSION_NAME --export-options-plist="$PATH_EXPORT_OPTIONS_PLISTS"\n  # artifacts: # If you want to generate artifacts, uncomment this script.\n  #   paths:\n  #   - $PATH_IPA\n')))}u.isMDXComponent=!0}}]);