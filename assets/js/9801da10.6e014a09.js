"use strict";(self.webpackChunkgits_cli=self.webpackChunkgits_cli||[]).push([[6949],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var u=a.createContext({}),s=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return a.createElement(u.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(t),d=l,g=c["".concat(u,".").concat(d)]||c[d]||m[d]||r;return t?a.createElement(g,i(i({ref:n},p),{},{components:t})):a.createElement(g,i({ref:n},p))}));function g(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,i=new Array(r);i[0]=d;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o[c]="string"==typeof e?e:l,i[1]=o;for(var s=2;s<r;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7822:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var a=t(7462),l=(t(7294),t(3905));const r={sidebar_position:12},i="Local2Dart",o={unversionedId:"gits_cli/generate/local2dart",id:"gits_cli/generate/local2dart",title:"Local2Dart",description:"This command will generate local database using sqflite from a yaml which is in local2dart/local2dart.yaml.",source:"@site/docs/gits_cli/generate/local2dart.md",sourceDirName:"gits_cli/generate",slug:"/gits_cli/generate/local2dart",permalink:"/gits_cli_documentation/docs/gits_cli/generate/local2dart",draft:!1,tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12},sidebar:"mySidebars",previous:{title:"Custom Package",permalink:"/gits_cli_documentation/docs/gits_cli/generate/core"},next:{title:"Remove Feature",permalink:"/gits_cli_documentation/docs/gits_cli/generate/remove-feature"}},u={},s=[{value:"Sturcture local2dart.yaml",id:"sturcture-local2dartyaml",level:2},{value:"Version",id:"version",level:3},{value:"Dir Database",id:"dir-database",level:3},{value:"Foreign Key Constrain Support",id:"foreign-key-constrain-support",level:3},{value:"Table",id:"table",level:3},{value:"Column",id:"column",level:4},{value:"Foreign",id:"foreign",level:4},{value:"Query",id:"query",level:3},{value:"Seed",id:"seed",level:3},{value:"View",id:"view",level:3},{value:"Trigger",id:"trigger",level:3},{value:"Result Generate",id:"result-generate",level:2},{value:"Available Method in Service",id:"available-method-in-service",level:3}],p={toc:s};function c(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"local2dart"},"Local2Dart"),(0,l.kt)("p",null,"This command will generate local database using sqflite from a yaml which is in ",(0,l.kt)("inlineCode",{parentName:"p"},"local2dart/local2dart.yaml"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"gits local2dart\n")),(0,l.kt)("p",null,"for projects that don't have ",(0,l.kt)("inlineCode",{parentName:"p"},"local2dart/local2dart.yaml")," you can do the command."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"gits local2dart init\n")),(0,l.kt)("h2",{id:"sturcture-local2dartyaml"},"Sturcture local2dart.yaml"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'version: 1\ndir_database: "gits"\nforeign_key_constrain_support: true\ntable:\n  example_category:\n    create_if_not_exists: true\n    column:\n      id:\n        type: "INTEGER"\n        constraint: "PRIMARY KEY"\n        autoincrement: true\n      name:\n        type: "TEXT"\n        nullable: false\n  example:\n    create_if_not_exists: true\n    column:\n      id:\n        type: "INTEGER"\n        constraint: "PRIMARY KEY"\n        autoincrement: true\n      name:\n        type: "TEXT"\n        nullable: false\n      example_category_id:\n        type: "INTEGER"\n        nullable: false\n    foreign:\n      example_category_id:\n        to_table: "example_category"\n        to_column: "id"\n        on_update: "CASCADE"\n        on_delete: "CASCADE"\n\nquery:\n  table_name:\n    custom_query_name:\n      disticnt: boolean by default value is false\n      column:\n        example_id:\n          type: "INTEGER"\n          origin: "id"\n        example_name:\n          type: "TEXT"\n          origin: "name"\n        example_total:\n          type: "INT"\n          origin: "SUM(quantity)"\n        example_count:\n          type: "INT"\n          origin: "count(*)"\n      join:\n         - "INNER JOIN example ON example.id = table_name.example_id"\n      where: "create_at BEETWEEN ? AND ?"\n      group_by: "example_id"\n      order_by: ""\n      limit: 10\n      offset: 0\n      having: ""\n\nseed:\n  status:\n    column:\n      - "id"\n      - "name"\n    value:\n      - "1,pending"\n      - "2,onprogress"\n      - "3,done"\n      - "4,cancel"\n\nview:\n  view_name:\n    create_if_not_exists: bool, by default is true\n    disticnt: boolean by default value is false\n    column:\n      example_id:\n        type: "INTEGER"\n        origin: "id"\n      example_name:\n        type: "TEXT"\n        origin: "name"\n      example_total:\n        type: "INT"\n        origin: "SUM(quantity)"\n      example_count:\n        type: "INT"\n        origin: "count(*)"\n    from: table_name\n    join:\n        - "INNER JOIN example ON example.id = table_name.example_id"\n    where: "create_at BEETWEEN ? AND ?"\n    group_by: "example_id"\n    order_by: ""\n    limit: 10\n    offset: 0\n    having: ""\n\ntrigger:\n  example:\n    raw_sql: >\n      CREATE TRIGGER [IF NOT EXISTS] trigger_name\n        [BEFORE|AFTER|INSTEAD OF] [INSERT|UPDATE|DELETE]\n        ON table_name\n        [WHEN condition]\n      BEGIN\n        statements;\n      END;\n')),(0,l.kt)("h3",{id:"version"},"Version"),(0,l.kt)("p",null,"Determine the version of the database if you add and replace existing tables in the database, the version must be added to avoid conflicts."),(0,l.kt)("h3",{id:"dir-database"},"Dir Database"),(0,l.kt)("p",null,"Directory for open database by default value is gits, recommendation to replace from this database by using the project name."),(0,l.kt)("h3",{id:"foreign-key-constrain-support"},"Foreign Key Constrain Support"),(0,l.kt)("p",null,"SQLite has supported foreign key constraint since version 3.6.19. The SQLite library must also be compiled with neither SQLITE_OMIT_FOREIGN_KEY nor SQLITE_OMIT_TRIGGER."),(0,l.kt)("p",null,"foreign_key_constrain_support is boolean"),(0,l.kt)("p",null,"if you set foreign_key_constrain_support true then:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-dart"},"PRAGMA foreign_keys = ON;\n")),(0,l.kt)("p",null,"otherwise"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-dart"},"PRAGMA foreign_keys = OFF;\n")),(0,l.kt)("p",null,"Learn more about Foreign Key Constrain Support ",(0,l.kt)("a",{parentName:"p",href:"https://www.sqlitetutorial.net/sqlite-foreign-key/"},"here")),(0,l.kt)("h3",{id:"table"},"Table"),(0,l.kt)("p",null,"For all naming use ",(0,l.kt)("inlineCode",{parentName:"p"},"snake_case"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"table:\n  table_name:\n    create_if_not_exists: bool, by default is true\n    column:\n      column_name:\n        type: INTEGER, REAL, TEXT, BLOB, BOOL\n        constraint: PRIMARY KEY, FOREIGN KEY, UNIQUE, CHECK (optional)\n        autoincrement: boolean by default value is null (optional)\n        nullable: boolean by default value is true (optional)\n        default: Default value if insert with null (optional)\n    foreign:\n      column_name:\n        to_table: references table\n        to_column: references column\n        on_update: constraint actions values SET NULL, SET DEFAULT, RESTRICT, NO ACTION, CASCADE (optional)\n        on_update: constraint actions values SET NULL, SET DEFAULT, RESTRICT, NO ACTION, CASCADE (optional)\n")),(0,l.kt)("h4",{id:"column"},"Column"),(0,l.kt)("p",null,"To use column_name you can use 2 ways:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Directly using the data type"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"column:\n  id: INTEGER\n  name: TEXT\n  description: TEXT\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"More specific"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'column:\n  id:\n    type: INTEGER\n    constraint: "PRIMARY KEY"\n    autoincrement: true\n  name:\n    type: TEXT\n    nullable: false\n  description: TEXT\n')))),(0,l.kt)("p",null,"You can also combine the two methods according to your needs."),(0,l.kt)("h4",{id:"foreign"},"Foreign"),(0,l.kt)("p",null,"To use this foreign in the column there must be a column_name that will be used as a foreign key."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'column:\n  category:\n    create_if_not_exists: true\n    column:\n      id:\n        type: "INTEGER"\n        constraint: "PRIMARY KEY"\n        autoincrement: true\n      name:\n        type: "TEXT"\n        nullable: false\n  todo:\n    create_if_not_exists: true\n    column:\n      id:\n        type: "INTEGER"\n        constraint: "PRIMARY KEY"\n        autoincrement: true\n      name:\n        type: "TEXT"\n        nullable: false\n      category_id:\n        type: "INTEGER"\n        nullable: false\n    foreign:\n      category_id:\n        to_table: "category"\n        to_column: "id"\n        on_update: "CASCADE"\n        on_delete: "CASCADE"\n')),(0,l.kt)("h3",{id:"query"},"Query"),(0,l.kt)("p",null,"Query is used if you need a custom query other than the one provided by default from generate."),(0,l.kt)("p",null,"Without join:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'query:\n  table_name:\n    custom_query_name:\n      disticnt: boolean by default value is false\n      column:\n        id:\n          type: "INTEGER"\n          origin: "id"\n        name:\n          type: "TEXT"\n          origin: "name"\n        total:\n          type: "INT"\n          origin: "SUM(quantity)"\n        count:\n          type: "INT"\n          origin: "count(*)"\n      where: "create_at BEETWEEN ? AND ?"\n      group_by: "example_id"\n      order_by: ""\n      limit: 10\n      offset: 0\n      having: ""\n')),(0,l.kt)("p",null,"With join:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'query:\n  table_name:\n    custom_query_name:\n      disticnt: boolean by default value is false\n      column:\n        id:\n          type: "INTEGER"\n          origin: "table_name.id"\n        example_id:\n          type: "INTEGER"\n          origin: "example.id"\n        name:\n          type: "TEXT"\n          origin: "table_name.name"\n        total:\n          type: "INT"\n          origin: "SUM(table_name.quantity)"\n        count:\n          type: "INT"\n          origin: "count(*)"\n      join:\n         - "INNER JOIN example ON example.id = table_name.example_id"\n      where: "create_at BEETWEEN ? AND ?"\n      group_by: "example_id"\n      order_by: ""\n      limit: 10\n      offset: 0\n      having: ""\n')),(0,l.kt)("p",null,"In this case, the difference is if you join with another table, then in ",(0,l.kt)("inlineCode",{parentName:"p"},"origin")," use the ",(0,l.kt)("inlineCode",{parentName:"p"},"table_name.")," prefix to determine which column to know from which table to avoid conflicts with the same column name."),(0,l.kt)("h3",{id:"seed"},"Seed"),(0,l.kt)("p",null,"Seed is used if you want to create seed data when the database creation data has been inserted without having to do it manually."),(0,l.kt)("p",null,"For example here we have a table called ",(0,l.kt)("inlineCode",{parentName:"p"},"status")," and the status we want already has data when we create the database."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'seed:\n  status:\n    column:\n      - "id"\n      - "name"\n    value:\n      - "1,pending"\n      - "2,onprogress"\n      - "3,done"\n      - "4,cancel"\n')),(0,l.kt)("h3",{id:"view"},"View"),(0,l.kt)("p",null,"View is used to create a view of the table, the declaration is almost the same as ",(0,l.kt)("a",{parentName:"p",href:"#query"},"Query")," except that there is an addition of ",(0,l.kt)("inlineCode",{parentName:"p"},"from")," which is used to determine from which table the data is retrieved."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'view:\n  view_name:\n    create_if_not_exists: bool, by default is true\n    disticnt: boolean by default value is false\n    column:\n      example_id:\n        type: "INTEGER"\n        origin: "id"\n      example_name:\n        type: "TEXT"\n        origin: "name"\n      example_total:\n        type: "INT"\n        origin: "SUM(quantity)"\n      example_count:\n        type: "INT"\n        origin: "count(*)"\n    from: table_name\n    join:\n        - "INNER JOIN example ON example.id = table_name.example_id"\n    where: "create_at BEETWEEN ? AND ?"\n    group_by: "example_id"\n    order_by: ""\n    limit: 10\n    offset: 0\n    having: ""\n')),(0,l.kt)("h3",{id:"trigger"},"Trigger"),(0,l.kt)("p",null,"If you want to add a trigger to the database for the trigger here use raw_sql so you are more flexible in defining it."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"trigger:\n  example:\n    raw_sql: >\n      CREATE TRIGGER [IF NOT EXISTS] trigger_name\n        [BEFORE|AFTER|INSTEAD OF] [INSERT|UPDATE|DELETE]\n        ON table_name\n        [WHEN condition]\n      BEGIN\n        statements;\n      END;\n")),(0,l.kt)("p",null,"Learn more about Trigger ",(0,l.kt)("a",{parentName:"p",href:"https://www.sqlitetutorial.net/sqlite-trigger/"},"here")),(0,l.kt)("h2",{id:"result-generate"},"Result Generate"),(0,l.kt)("p",null,"The result of generating local2dart will be a new module inside ",(0,l.kt)("inlineCode",{parentName:"p"},"core/packages/local2dart"),", don't forget to add ",(0,l.kt)("inlineCode",{parentName:"p"},"export 'package:local2dart/local2dart.dart';")," in ",(0,l.kt)("inlineCode",{parentName:"p"},"core/lib/core.dart"),"."),(0,l.kt)("h3",{id:"available-method-in-service"},"Available Method in Service"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"count"),(0,l.kt)("li",{parentName:"ul"},"get"),(0,l.kt)("li",{parentName:"ul"},"getWithPagination"),(0,l.kt)("li",{parentName:"ul"},"getById"),(0,l.kt)("li",{parentName:"ul"},"insert"),(0,l.kt)("li",{parentName:"ul"},"bulkInsert"),(0,l.kt)("li",{parentName:"ul"},"upsert"),(0,l.kt)("li",{parentName:"ul"},"update"),(0,l.kt)("li",{parentName:"ul"},"bulkUpdate"),(0,l.kt)("li",{parentName:"ul"},"updateById"),(0,l.kt)("li",{parentName:"ul"},"bulkUpdateById"),(0,l.kt)("li",{parentName:"ul"},"delete"),(0,l.kt)("li",{parentName:"ul"},"bulkDelete"),(0,l.kt)("li",{parentName:"ul"},"deleteById"),(0,l.kt)("li",{parentName:"ul"},"bulkDeleteById")))}c.isMDXComponent=!0}}]);